apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'launch4j'
apply plugin: 'macAppBundle'

archivesBaseName = "esr-receiver-http"
mainClassName = "ch.luklanis.esreceiver.AppFrame"

sourceCompatibility = 1.6
version = '0.3'


buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'edu.sc.seis.gradle:launch4j:1.0.6'
      classpath 'edu.sc.seis.gradle:macappbundle:2.0.0'
    }
}

macAppBundle {
  mainClassName = "ch.luklanis.esreceiver.AppFrame"
  //icon = "myIcon.icns"
  //bundleJRE = true
  //javaProperties.put("apple.laf.useScreenMenuBar", "true")
  //backgroundImage = "doc/macbackground.png"
}

launch4j {
  if (project.hasProperty('launch4jCmd')) {
    launch4jCmd = project.launch4jCmd
  }

  mainClassName = project.mainClassName
  jar = "lib/${project.archivesBaseName}-${project.version}.jar"
  outfile = "${project.archivesBaseName}.exe"
}

repositories {
    mavenCentral()

    maven {
        url "http://maven.mashape.com/releases"
    }
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'

    compile 'com.mashape.unirest:unirest-java:1.2.5'
    compile 'org.apache.httpcomponents:httpclient:4.3'
    compile 'org.apache.httpcomponents:httpasyncclient:4.0-beta4'
    compile 'org.apache.httpcomponents:httpmime:4.3'
    compile 'org.json:json:20090211'
    compile 'org.bouncycastle:bcprov-jdk15on:1.49'
}

jar {
    //from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest {
        attributes 'Implementation-Title': 'ESR Receiver',
                'Implementation-Version': version,
                'Main-Class': 'ch.luklanis.esreceiver.AppFrame',
                'Class-Path': '.'
    }
}

task unitTests(type: Test) {
    include 'ch/luklanis/esreceiver/unit/**/*'
}

task integrationTests(type: Test) {
    include 'ch/luklanis/esreceiver/integration/**/*'
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.8'
}

//task copyDependencies (type: Sync) {
//    //into "$buildDir/output/lib"
//    into "$buildDir/libs"
//    from configurations.runtime
//}
//
//jar.dependsOn copyDependencies

//task createStarters << {
//    File bat = new File("$buildDir/tmp/EsrReceiver.bat")
//    bat.text = /java -jar libs\${jar.archiveName}/
//
//    File sh = new File("$buildDir/tmp/EsrReceiver.sh")
//    sh.text = "java -jar libs/${jar.archiveName}"
//}

task zipExe(type: Zip) {
    into("EsrReceiver") {
        from "$buildDir/launch4j/${launch4j.outfile}"
    }

    into("EsrReceiver/lib") {
        from "$buildDir/launch4j/lib"
    }
}

zipExe.dependsOn createExe
//zip.dependsOn createStarters